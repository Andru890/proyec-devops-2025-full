services:
  backend:
    image: ${{ secrets.DOCKERHUB_USERNAME }}/project-devops-2025:latest
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DB: ${{ secrets.MYSQL_DATABASE }}
    command: sh -c "npm install && npm start"
    depends_on:
      - db
      - localstack

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
    ports:
      - '3307:3306'
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  localstack:
    image: localstack/localstack:latest
    ports:
      - '127.0.0.1:4566:4566'
    environment:
      - SERVICES=ec2,rds,vpc,s3,iam,lambda
      - DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEBUG=${DEBUG:-0}
      - DATA_DIR=/var/lib/localstack
    volumes:
      - '/tmp/localstack_data:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:4566/_localstack/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  db_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
